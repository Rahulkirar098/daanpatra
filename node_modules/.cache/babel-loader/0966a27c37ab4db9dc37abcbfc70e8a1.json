{"ast":null,"code":"import _classCallCheck from\"/home/rahul/Documents/daanpatra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import*as conf from\"./Config\";var ApiHandler=function ApiHandler(){_classCallCheck(this,ApiHandler);};var getResult=function getResult(url){var method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"GET\";var data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var success=arguments.length>3&&arguments[3]!==undefined?arguments[3]:function(){};var failed=arguments.length>4&&arguments[4]!==undefined?arguments[4]:function(){};var parameters={};parameters.method=method;if(data){parameters.body=data;}parameters.headers={\"Content-Type\":\"application/json\"// Accept: x\"application/json\",\n};try{fetch(conf.apiUrl+url,parameters).then(function(response){return response.json();}).then(function(res){success(res);}).catch(function(error){failed(error);});}catch(error){failed(error);}};export var otpGenerate=function otpGenerate(phoneNo){var success=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(response){};var failed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(error){};if(!phoneNo){failed(\"not found\");return;}getResult(\"/otp/\",\"POST\",JSON.stringify({username:phoneNo}),function(response){if(response.status===200){success(response);}else{failed(response);}});};export var signin=function signin(phoneNo,otp){var success=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(){};var failed=arguments.length>3&&arguments[3]!==undefined?arguments[3]:function(){};if(!otp||!phoneNo)return;getResult(\"/login/\",\"POST\",JSON.stringify({username:phoneNo,password:otp}),function(response){success(response);});};export var signup=function signup(fname,lname,phoneNo){var success=arguments.length>3&&arguments[3]!==undefined?arguments[3]:function(){};if(!fname||!lname||!phoneNo)return;getResult(\"/user-register/\",\"POST\",JSON.stringify({contact:phoneNo,username:phoneNo,first_name:fname,last_name:lname}),function(response){success(response);});};export default ApiHandler;","map":{"version":3,"sources":["/home/rahul/Documents/daanpatra/src/config/ApiHandler.js"],"names":["conf","ApiHandler","getResult","url","method","data","success","failed","parameters","body","headers","fetch","apiUrl","then","response","json","res","catch","error","otpGenerate","phoneNo","JSON","stringify","username","status","signin","otp","password","signup","fname","lname","contact","first_name","last_name"],"mappings":"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","sourcesContent":["import * as conf from \"./Config\";\r\n\r\nclass ApiHandler {}\r\nconst getResult = (\r\n  url,\r\n  method = \"GET\",\r\n  data = null,\r\n  success = () => {},\r\n  failed = () => {}\r\n) => {\r\n  let parameters = {};\r\n  parameters.method = method;\r\n  if (data) {\r\n    parameters.body = data;\r\n  }\r\n  parameters.headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    // Accept: x\"application/json\",\r\n  };\r\n  try {\r\n    fetch(conf.apiUrl + url, parameters)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        success(res);\r\n      })\r\n      .catch((error) => {\r\n        failed(error);\r\n      });\r\n  } catch (error) {\r\n    failed(error);\r\n  }\r\n};\r\n\r\nexport const otpGenerate = (\r\n  phoneNo,\r\n  success = (response) => {},\r\n  failed = (error) => {}\r\n) => {\r\n  if (!phoneNo) {\r\n    failed(\"not found\");\r\n    return;\r\n  }\r\n  getResult(\r\n    \"/otp/\",\r\n    \"POST\",\r\n    JSON.stringify({ username: phoneNo }),\r\n    (response) => {\r\n      if (response.status === 200) {\r\n        success(response);\r\n      } else {\r\n        failed(response);\r\n      }\r\n    }\r\n  );\r\n};\r\nexport const signin = (phoneNo, otp, success = () => {}, failed = () => {}) => {\r\n  if (!otp || !phoneNo) return;\r\n  getResult(\r\n    \"/login/\",\r\n    \"POST\",\r\n    JSON.stringify({ username: phoneNo, password: otp }),\r\n    (response) => {\r\n      success(response);\r\n    }\r\n  );\r\n};\r\nexport const signup = (fname, lname, phoneNo, success = () => {}) => {\r\n  if (!fname || !lname || !phoneNo) return;\r\n  getResult(\r\n    \"/user-register/\",\r\n    \"POST\",\r\n    JSON.stringify({\r\n      contact: phoneNo,\r\n      username: phoneNo,\r\n      first_name: fname,\r\n      last_name: lname,\r\n    }),\r\n    (response) => {\r\n      success(response);\r\n    }\r\n  );\r\n};\r\nexport default ApiHandler;\r\n"]},"metadata":{},"sourceType":"module"}